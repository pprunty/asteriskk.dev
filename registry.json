{
  "$schema": "https://ui.shadcn.com/schema/registry.json",
  "name": "Delta Components",
  "homepage": "https://deltacomponents.dev",
  "items": [
    {
      "name": "hello-world",
      "type": "registry:component",
      "title": "Hello World",
      "description": "A simple hello world component",
      "registryDependencies": ["button"],
      "files": [
        {
          "path": "delta/new-york/hello-world/hello-world.tsx",
          "type": "registry:component"
        }
      ]
    },
    {
      "name": "example-form",
      "type": "registry:component",
      "title": "Example Form",
      "description": "A contact form with Zod validation.",
      "dependencies": ["zod"],
      "registryDependencies": ["button", "input", "label", "textarea", "card"],
      "files": [
        {
          "path": "delta/new-york/example-form/example-form.tsx",
          "type": "registry:component"
        }
      ]
    },
    {
      "name": "complex-component",
      "type": "registry:component",
      "title": "Complex Component",
      "description": "A complex component showing hooks, libs and components.",
      "registryDependencies": ["card"],
      "files": [
        {
          "path": "delta/new-york/complex-component/page.tsx",
          "type": "registry:page",
          "target": "app/pokemon/page.tsx"
        },
        {
          "path": "delta/new-york/complex-component/components/pokemon-card.tsx",
          "type": "registry:component"
        },
        {
          "path": "delta/new-york/complex-component/components/pokemon-image.tsx",
          "type": "registry:component"
        },
        {
          "path": "delta/new-york/complex-component/lib/pokemon.ts",
          "type": "registry:lib"
        },
        {
          "path": "delta/new-york/complex-component/hooks/use-pokemon.ts",
          "type": "registry:hook"
        }
      ]
    },
    {
      "name": "admonition",
      "type": "registry:component",
      "title": "Admonition",
      "description": "A component for admonition",
      "dependencies": [],
      "registryDependencies": [],
      "files": [
        {
          "path": "delta/components/admonition.tsx",
          "type": "registry:component",
          "target": "delta/components/admonition.tsx"
        },
        {
          "path": "delta/components/admonition-demo.tsx",
          "type": "registry:component",
          "target": "delta/components/admonition-demo.tsx"
        }
      ]
    },
    {
      "name": "modal",
      "type": "registry:component",
      "title": "Modal",
      "description": "A customizable modal component with animations and various style options",
      "dependencies": ["framer-motion", "@phosphor-icons/react"],
      "registryDependencies": ["button"],
      "files": [
        {
          "path": "delta/components/modal.tsx",
          "type": "registry:component",
          "target": "delta/components/modal.tsx"
        },
        {
          "path": "delta/components/modal-demo.tsx",
          "type": "registry:component",
          "target": "delta/components/modal-demo.tsx"
        }
      ]
    },
    {
      "name": "scramble-in",
      "type": "registry:component",
      "title": "Scramble In (fancycomponents.dev)",
      "description": "A component for scramble-in",
      "dependencies": [],
      "registryDependencies": [],
      "files": [
        {
          "path": "delta/open-source-inspired-collection/scramble-in.tsx",
          "type": "registry:component",
          "target": "delta/components/scramble-in.tsx"
        },
        {
          "path": "delta/open-source-inspired-collection/scramble-in-demo.tsx",
          "type": "registry:component",
          "target": "delta/components/scramble-in-demo.tsx"
        }
      ]
    },
    {
      "name": "neobrutalism-card",
      "type": "registry:component",
      "title": "Neobrutalism Card (neobrutalism.dev)",
      "description": "A component for neobrutalism-card",
      "dependencies": [],
      "registryDependencies": [],
      "files": [
        {
          "path": "delta/open-source-inspired-collection/neobrutalism-card.tsx",
          "type": "registry:component",
          "target": "delta/components/neobrutalism-card.tsx"
        },
        {
          "path": "delta/open-source-inspired-collection/neobrutalism-card-demo.tsx",
          "type": "registry:component",
          "target": "delta/components/neobrutalism-card-demo.tsx"
        }
      ]
    },
    {
      "name": "use-hq-image",
      "type": "registry:hook",
      "badge": "new",
      "title": "useHqImage",
      "description": "A hook for use-hq-image",
      "dependencies": [],
      "registryDependencies": [],
      "files": [
        {
          "path": "delta/hooks/use-hq-image.ts",
          "type": "registry:hook",
          "target": "delta/hooks/use-hq-image.ts"
        }
      ]
    },
    {
      "name": "ios-screen-preview",
      "type": "registry:component",
      "title": "iOS Screen Preview",
      "description": "A component for ios-screen-preview",
      "dependencies": [],
      "registryDependencies": [],
      "files": [
        {
          "path": "delta/other/ios-screen-preview.tsx",
          "type": "registry:component",
          "target": "delta/other/ios-screen-preview.tsx"
        },
        {
          "path": "delta/other/ios-screen-preview-demo.tsx",
          "type": "registry:component",
          "target": "delta/other/ios-screen-preview-demo.tsx"
        }
      ]
    },
    {
      "name": "bottom-bar",
      "type": "registry:component",
      "title": "Bottom Bar",
      "description": "A component for bottom-bar",
      "dependencies": [],
      "registryDependencies": [],
      "files": [
        {
          "path": "delta/layout/bottom-bar.tsx",
          "type": "registry:component",
          "target": "delta/layout/bottom-bar.tsx"
        },
        {
          "path": "delta/layout/bottom-bar-demo.tsx",
          "type": "registry:component",
          "target": "delta/layout/bottom-bar-demo.tsx"
        }
      ]
    },
    {
      "name": "full-bleed-section",
      "type": "registry:component",
      "title": "Full Bleed Section",
      "description": "A component for full-bleed-section",
      "dependencies": [],
      "registryDependencies": [],
      "files": [
        {
          "path": "delta/components/full-bleed-section.tsx",
          "type": "registry:component",
          "target": "delta/components/full-bleed-section.tsx"
        },
        {
          "path": "delta/components/full-bleed-section-demo.tsx",
          "type": "registry:component",
          "target": "delta/components/full-bleed-section-demo.tsx"
        }
      ]
    },
    {
      "name": "tweet",
      "type": "registry:component",
      "title": "Tweet",
      "badge": "new",
      "description": "A component for embedding and displaying tweets with server-side rendering",
      "dependencies": ["react-tweet"],
      "registryDependencies": [],
      "files": [
        {
          "path": "delta/components/tweet.tsx",
          "type": "registry:component",
          "target": "delta/components/tweet.tsx"
        },
        {
          "path": "delta/components/tweet-demo.tsx",
          "type": "registry:component",
          "target": "delta/components/tweet-demo.tsx"
        },
        {
          "path": "delta/components/tweet.css",
          "type": "registry:file",
          "target": "delta/components/tweet.css"
        }
      ]
    },
    {
      "name": "video-player",
      "type": "registry:component",
      "title": "Video Player",
      "description": "A component for video-player",
      "dependencies": [],
      "registryDependencies": [],
      "files": [
        {
          "path": "delta/components/video-player.tsx",
          "type": "registry:component",
          "target": "delta/components/video-player.tsx"
        },
        {
          "path": "delta/components/video-player-demo.tsx",
          "type": "registry:component",
          "target": "delta/components/video-player-demo.tsx"
        }
      ]
    },
    {
      "name": "tabs",
      "type": "registry:component",
      "title": "Tabs",
      "description": "A component for tabs",
      "dependencies": [],
      "registryDependencies": [],
      "files": [
        {
          "path": "delta/components/tabs.tsx",
          "type": "registry:component",
          "target": "delta/components/tabs.tsx"
        },
        {
          "path": "delta/components/tabs-demo.tsx",
          "type": "registry:component",
          "target": "delta/components/tabs-demo.tsx"
        }
      ]
    },
    {
      "name": "button",
      "type": "registry:component",
      "title": "Button",
      "description": "A component for button",
      "dependencies": [],
      "registryDependencies": [],
      "files": [
        {
          "path": "delta/components/button.tsx",
          "type": "registry:component",
          "target": "delta/components/button.tsx"
        },
        {
          "path": "delta/components/button-demo.tsx",
          "type": "registry:component",
          "target": "delta/components/button-demo.tsx"
        }
      ]
    },
    {
      "name": "text-input",
      "type": "registry:component",
      "title": "Text Input",
      "description": "A text input component with validation, error handling, and various styling options",
      "dependencies": ["zod"],
      "registryDependencies": ["input"],
      "files": [
        {
          "path": "delta/forms/text-input.tsx",
          "type": "registry:component",
          "target": "delta/forms/text-input.tsx"
        },
        {
          "path": "delta/forms/text-input-demo.tsx",
          "type": "registry:component",
          "target": "delta/forms/text-input-demo.tsx"
        }
      ]
    },
    {
      "name": "checkbox-input",
      "type": "registry:component",
      "title": "Checkbox Input",
      "description": "A checkbox input component with validation, error handling, and label support",
      "dependencies": ["zod"],
      "registryDependencies": ["checkbox"],
      "files": [
        {
          "path": "delta/forms/checkbox-input.tsx",
          "type": "registry:component",
          "target": "delta/forms/checkbox-input.tsx"
        },
        {
          "path": "delta/forms/checkbox-input-demo.tsx",
          "type": "registry:component",
          "target": "delta/forms/checkbox-input-demo.tsx"
        }
      ]
    },
    {
      "name": "select-input",
      "type": "registry:component",
      "title": "Select Input",
      "description": "A select input component with both native and shadcn/ui select variants",
      "dependencies": ["zod", "lucide-react"],
      "registryDependencies": ["select"],
      "files": [
        {
          "path": "delta/forms/select-input.tsx",
          "type": "registry:component",
          "target": "delta/forms/select-input.tsx"
        },
        {
          "path": "delta/forms/select-input-demo.tsx",
          "type": "registry:component",
          "target": "delta/forms/select-input-demo.tsx"
        }
      ]
    },
    {
      "name": "radio-input",
      "type": "registry:component",
      "title": "Radio Input",
      "description": "A radio input group component with validation and description support",
      "dependencies": ["zod"],
      "registryDependencies": ["radio-group"],
      "files": [
        {
          "path": "delta/forms/radio-input.tsx",
          "type": "registry:component",
          "target": "delta/forms/radio-input.tsx"
        },
        {
          "path": "delta/forms/radio-input-demo.tsx",
          "type": "registry:component",
          "target": "delta/forms/radio-input-demo.tsx"
        }
      ]
    },
    {
      "name": "switch-input",
      "type": "registry:component",
      "title": "Switch Input",
      "description": "A switch toggle component with validation and label support",
      "dependencies": ["zod"],
      "registryDependencies": ["switch"],
      "files": [
        {
          "path": "delta/forms/switch-input.tsx",
          "type": "registry:component",
          "target": "delta/forms/switch-input.tsx"
        },
        {
          "path": "delta/forms/switch-input-demo.tsx",
          "type": "registry:component",
          "target": "delta/forms/switch-input-demo.tsx"
        }
      ]
    },
    {
      "name": "textarea-input",
      "type": "registry:component",
      "title": "Textarea Input",
      "description": "A textarea component with validation, error handling, and various styling options",
      "dependencies": ["zod"],
      "registryDependencies": ["textarea"],
      "files": [
        {
          "path": "delta/forms/textarea-input.tsx",
          "type": "registry:component",
          "target": "delta/forms/textarea-input.tsx"
        },
        {
          "path": "delta/forms/textarea-input-demo.tsx",
          "type": "registry:component",
          "target": "delta/forms/textarea-input-demo.tsx"
        }
      ]
    },
    {
      "name": "date-input",
      "type": "registry:component",
      "title": "Date Input",
      "description": "A date picker component with validation, min/max date support, and formatting options",
      "dependencies": ["zod", "date-fns", "lucide-react"],
      "registryDependencies": ["button", "calendar", "popover"],
      "files": [
        {
          "path": "delta/forms/date-input.tsx",
          "type": "registry:component",
          "target": "delta/forms/date-input.tsx"
        },
        {
          "path": "delta/forms/date-input-demo.tsx",
          "type": "registry:component",
          "target": "delta/forms/date-input-demo.tsx"
        }
      ]
    },
    {
      "name": "file-input",
      "type": "registry:component",
      "title": "File Input",
      "description": "A file input component with drag and drop support, file previews, and validation",
      "dependencies": ["zod", "@phosphor-icons/react"],
      "registryDependencies": ["button"],
      "files": [
        {
          "path": "delta/forms/file-input.tsx",
          "type": "registry:component",
          "target": "delta/forms/file-input.tsx"
        },
        {
          "path": "delta/forms/file-input-demo.tsx",
          "type": "registry:component",
          "target": "delta/forms/file-input-demo.tsx"
        }
      ]
    },
    {
      "name": "smart-form",
      "type": "registry:component",
      "title": "Smart Form",
      "description": "A powerful abstraction for creating forms with minimal code. Supports various input types, layouts, validation, and conditional fields.",
      "dependencies": [
        "zod",
        "date-fns",
        "lucide-react",
        "@phosphor-icons/react"
      ],
      "registryDependencies": [
        "button",
        "input",
        "checkbox",
        "select",
        "radio-group",
        "switch",
        "textarea",
        "calendar",
        "popover",
        "card"
      ],
      "files": [
        {
          "path": "delta/forms/smart-form.tsx",
          "type": "registry:component",
          "target": "delta/forms/smart-form.tsx"
        },
        {
          "path": "delta/forms/smart-form-demo.tsx",
          "type": "registry:component",
          "target": "delta/forms/smart-form-demo.tsx"
        },
        {
          "path": "delta/forms/text-input.tsx",
          "type": "registry:component",
          "target": "delta/forms/text-input.tsx"
        },
        {
          "path": "delta/forms/checkbox-input.tsx",
          "type": "registry:component",
          "target": "delta/forms/checkbox-input.tsx"
        },
        {
          "path": "delta/forms/select-input.tsx",
          "type": "registry:component",
          "target": "delta/forms/select-input.tsx"
        },
        {
          "path": "delta/forms/radio-input.tsx",
          "type": "registry:component",
          "target": "delta/forms/radio-input.tsx"
        },
        {
          "path": "delta/forms/switch-input.tsx",
          "type": "registry:component",
          "target": "delta/forms/switch-input.tsx"
        },
        {
          "path": "delta/forms/textarea-input.tsx",
          "type": "registry:component",
          "target": "delta/forms/textarea-input.tsx"
        },
        {
          "path": "delta/forms/date-input.tsx",
          "type": "registry:component",
          "target": "delta/forms/date-input.tsx"
        },
        {
          "path": "delta/forms/file-input.tsx",
          "type": "registry:component",
          "target": "delta/forms/file-input.tsx"
        }
      ]
    }
  ]
}
